// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'mediadata', '../collections/topics', 'text!templates/index.html'], function($, _, Backbone, md, TopicsCollection, tplIndex) {
    'use strict';
    var IndexView;
    return IndexView = (function(_super) {
      __extends(IndexView, _super);

      function IndexView() {
        return IndexView.__super__.constructor.apply(this, arguments);
      }

      IndexView.prototype.el = '#main';

      IndexView.prototype.collection = null;

      IndexView.prototype.template = _.template(tplIndex);

      IndexView.prototype.name = null;

      IndexView.prototype.initialize = function() {
        this.collection = new TopicsCollection();
        return this.collection.fetch({
          success: (function(_this) {
            return function() {
              _this.collection = _this.collection.models[0].attributes;
              console.log(_this.collection);
              return _this.render();
            };
          })(this)
        });
      };

      IndexView.prototype.render = function() {
        this.$el.html(this.template(this.collection));
        return this;
      };

      return IndexView;

    })(Backbone.View);
  });

}).call(this);
