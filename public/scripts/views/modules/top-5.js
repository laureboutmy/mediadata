// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'text!templates/modules/top-5.html'], function($, _, Backbone, tplTop5) {
    'use strict';
    var Top5View;
    return Top5View = (function(_super) {
      __extends(Top5View, _super);

      function Top5View() {
        return Top5View.__super__.constructor.apply(this, arguments);
      }

      Top5View.prototype.el = '.module.top-5';

      Top5View.prototype.template = _.template(tplTop5);

      Top5View.prototype.total = 0;

      Top5View.prototype.fillPercent = 0;

      Top5View.prototype.render = function(data) {
        var d, i, _i, _len, _ref;
        this.total = 0;
        this.fillPercent = 0;
        _ref = data.totalMentions;
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          d = _ref[i];
          d.mentionCount = +d.mentionCount;
          this.total += d.mentionCount;
        }
        this.$el.html(this.template(data));
        this.setTotal(data);
        return this.fillGauges('shows');
      };

      Top5View.prototype.getFillPercent = function(bar, type) {
        var _this;
        _this = this;
        this.fillPercent = 0;
        return this.fillPercent = bar.data('appearances') * 100 / this.total;
      };

      Top5View.prototype.fillGauges = function(type) {
        var _this;
        _this = this;
        return this.$el.find('#' + type + ' .gauge span').each(function() {
          _this.getFillPercent($(this), type);
          $(this).addClass('width').width(0);
          return $(this).removeClass('width').width(_this.fillPercent + '%');
        });
      };

      Top5View.prototype.setTotal = function(data) {
        var _this;
        _this = this;
        if (!data.person) {
          return $('.header-wrap span.value').html(_this.total);
        } else if (data.person === 'person2') {
          return $('section .top-5.person2 .header-wrap span.value').html(_this.total);
        } else {
          return $('section .top-5.person1 .header-wrap span.value').html(_this.total);
        }
      };

      return Top5View;

    })(Backbone.View);
  });

}).call(this);
