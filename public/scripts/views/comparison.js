// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'mediadata', '../collections/persons', '../models/person', 'text!templates/comparison.html', '../views/modules/top-5', '../views/modules/timeline', '../views/modules/clock'], function($, _, Backbone, md, PersonsCollection, PersonModel, tplComparison, Top5View, TimelineView, ClockView) {
    'use strict';
    var ComparisonView;
    return ComparisonView = (function(_super) {
      __extends(ComparisonView, _super);

      function ComparisonView() {
        return ComparisonView.__super__.constructor.apply(this, arguments);
      }

      ComparisonView.prototype.el = '#main';

      ComparisonView.prototype.collection = null;

      ComparisonView.prototype.template = _.template(tplComparison);

      ComparisonView.prototype.initialize = function(options) {
        md.Collections[options.name1] = new PersonsCollection(options.name1);
        md.Collections[options.name2] = new PersonsCollection(options.name2);
        return this.render(options);
      };

      ComparisonView.prototype.initializeModules = function(data) {
        this.top51 = new Top5View({
          el: '.module.top-5.person1'
        });
        this.top52 = new Top5View({
          el: '.module.top-5.person2'
        });
        this.timeline = new TimelineView();
        this.clock1 = new ClockView({
          el: '.module.clock.person1'
        });
        this.clock2 = new ClockView({
          el: '.module.clock.person2'
        });
        return this.renderModules(data);
      };

      ComparisonView.prototype.render = function(options) {
        var _this;
        _this = this;
        _this.collection = {};
        return md.Collections[options.name1].fetch({
          success: function() {
            _this.collection.person1 = md.Collections[options.name1].models[0].attributes;
            md.Collections[options.name2].fetch({
              success: function() {
                _this.collection.person2 = md.Collections[options.name2].models[0].attributes;
                _this.$el.html(_this.template(_this.collection));
                return _this.initializeModules(_this.collection);
              }
            });
            return _this;
          }
        });
      };

      ComparisonView.prototype.renderModules = function(data) {
        this.top51.render({
          popularChannels: data.person1.popularChannels,
          popularShows: data.person1.popularShows
        });
        this.top52.render({
          popularChannels: data.person2.popularChannels,
          popularShows: data.person2.popularShows
        });
        this.timeline.render({
          person1: {
            name: data.person1.person.name,
            timelineMentions: data.person1.person.timelineMentions
          },
          person2: {
            name: data.person2.person.name,
            timelineMentions: data.person2.person.timelineMentions
          }
        });
        this.clock1.render({
          broadcastHoursByDay: data.person1.broadcastHoursByDay,
          personNumber: 1
        });
        return this.clock2.render({
          broadcastHoursByDay: data.person2.broadcastHoursByDay,
          personNumber: 2
        });
      };

      return ComparisonView;

    })(Backbone.View);
  });

}).call(this);
