// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'mediadata', '../collections/persons', '../models/person', 'text!templates/person.html', '../views/modules/top-5', '../views/modules/timeline', '../views/modules/clock'], function($, _, Backbone, md, PersonsCollection, PersonModel, tplPerson, Top5View, TimelineView, ClockView) {
    'use strict';
    var PersonView;
    return PersonView = (function(_super) {
      __extends(PersonView, _super);

      function PersonView() {
        return PersonView.__super__.constructor.apply(this, arguments);
      }

      PersonView.prototype.el = '#main';

      PersonView.prototype.collection = null;

      PersonView.prototype.template = _.template(tplPerson);

      PersonView.prototype.name = null;

      PersonView.prototype.initialize = function(options) {
        this.name = options.name1;
        this.collection = new PersonsCollection(this.name);
        md.Status['currentView'] = 'person';
        return this.render(options);
      };

      PersonView.prototype.machin = function(options) {};

      PersonView.prototype.initializeModules = function(data) {
        this.top5 = new Top5View();
        this.timeline = new TimelineView();
        this.clock = new ClockView();
        return this.renderModules(data);
      };

      PersonView.prototype.bind = function() {
        var _this;
        _this = this;
        $(window).on('scroll', this.stickFilters);
        return $(window).on('resize', this.onResize);
      };

      PersonView.prototype.stickFilters = function() {
        if ($(window).scrollTop() > $('header.header').outerHeight()) {
          return $('#filters').addClass('fixed');
        } else {
          return $('#filters').removeClass('fixed');
        }
      };

      PersonView.prototype.render = function(options) {
        var _this;
        _this = this;
        $('div.loader').addClass('loading');
        return this.collection.fetch({
          success: (function(_this) {
            return function(data) {
              $('div.loader').addClass('complete');
              _this.collection = _this.collection.models[0].attributes;
              _this.$el.html(_this.template(_this.collection));
              md.Router.getFilters();
              _this.initializeModules(_this.collection);
              _this.bind();
              _this.onResize();
              return _this;
            };
          })(this)
        });
      };

      PersonView.prototype.renderModules = function(data) {
        this.top5.render({
          popularChannels: data.popularChannels,
          popularShows: data.popularShows
        });
        this.timeline.render({
          person1: {
            name: data.person.name,
            timelineMentions: data.timelineMentions
          }
        });
        return this.clock.render({
          broadcastHoursByDay: data.broadcastHoursByDay,
          personNumber: 1
        });
      };

      PersonView.prototype.onResize = function() {
        return $('#filters').width($(window).width() - 80);
      };

      PersonView.prototype.rerender = function() {
        this.collection = new PersonsCollection(this.name);
        return this.collection.fetch({
          success: (function(_this) {
            return function() {
              _this.collection = _this.collection.models[0].attributes;
              return _this.renderModules(_this.collection);
            };
          })(this)
        });
      };

      return PersonView;

    })(Backbone.View);
  });

}).call(this);
